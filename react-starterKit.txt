https://reactjs.org/docs/create-a-new-react-app.html

1) REACT Start-up:
	- npx create-react-app react-file-name. Inicijuojasi projektas savaime (susikuria package.json, node_modules, pasckage-lock.json, .gitignore). React turi 2 folderius: 
		-public (skirta narsyklei) : cia sudeti visi failai, kuriuos mato narsykle. Visi faila bus cia realiam serveryje. index.html: surasyta is kur jis gauna icons, images, etc. Nieko cia nekeiciam. Mums idomi tik <div id="root"</div> elementas. cia sukris visi dinamiskai sugeneruoti HTML elementai is js. narsykle uzloadina js faila. 
		- src (skirta programuotojui): production mode, src nebus arba jis bus pasleptas. Sie failai yra developinimo serveryje.
	- npm start - (sudejus visus reikalingus instalus) sukuriamas React server Local:  http://localhost:3000 

2) src/ :
	- koreguojama index.js =>  VSC apacioje  {}JavaScript React ikona, iskritusiame meniu => 	JavaScrip React.... (salia Julia).
	- app.js => rename app.jsx (jei reikia) 
	
3) sukuriama src/components/Component-name => sukuriami komponentai components folderyje. Visu komponentu pavadinimai prasideda is Didziosios raides
	- import React from "react";
	
4) Sass:
	- create index.scss
	- npm install sass-loader sass 
	- VSC => watch sass	
	- App.js => import "./index.scss";

5)  Axios (- fetch wraperis), jei reikia:
	- npm install axios;
	- App.js => import axios from "axios";

6) React-bootstrap:
	- npm install react-bootstrap bootstrap@5.1.3
	- src/index.js or App.js =>
		import 'bootstrap/dist/css/bootstrap.min.css';

7) Router idiegimas:
	- npm install react-router-dom@6
	- src/index.js => import { BrowserRouter } from "react-router-dom"; //arba serverside: import { HashRouter } as Router from "react-router-dom";
	- src/App.js => import { Routes, Route, Link } from "react-router-dom";

8) MUI - React UI framework:
	- npm install @mui/material @emotion/react @emotion/styled @mui/styled-engine-sc styled-components;
		- import Button from '@mui/material/Button';
		- import Box from '@mui/material/Box'
		- import { Slider } from "@mui/material";

9) mySQL:
	- npm install mysql

10) firebase (DB nereikalingas serveris) https://firebase.google.com/ :
	- Register app => https://console.firebase.google.com/u/0/?pli=1
		- add project + name
		- </> web + name + register app
	- Add Firebase SDK (use npm):
		- npm install firebase@8.2.0
		- src/ firebase.js => 
			import { initializeApp } from "firebase/app";
			// Your web app's Firebase configuration (example):
			const firebaseConfig = {
			apiKey: "AIzaSyD3lyihPkRoHB8JyMv3vr7uKBDIRtdxmK0",
			authDomain: "timetableapp-bb4a2.firebaseapp.com",
			projectId: "timetableapp-bb4a2",
			storageBucket: "timetableapp-bb4a2.appspot.com",
			messagingSenderId: "19170589489",
			appId: "1:19170589489:web:adfc5cc0343a902053ce10"
			};
			// Initialize Firebase
			const app = initializeApp(firebaseConfig);
	

		

Build/ Firestore database/test mode/ eur3 (europe-west) / enable
Cloud Firestore / start collection/ Field


11) npm start =>  http://localhost:3000 

-----------------------------------------------------------

Atsidarius STARTERKIT is GIT =>
	- npm install / npm i
	- npm start